{"version":3,"sources":["logo.svg","components/Profile.js","components/Parallax.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Profile","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","className","id","class","onClick","props","handleClickScroll","Component","Parallax","About","App","Scroll","document","getElementById","concat","scrollIntoView","behavior","window","onscroll","scrollFunction","body","scrollTop","documentElement","style","display","components_Parallax","components_Profile","components_About","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffdacb16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nexport class Profile extends Component {\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <div className=\"App\" id=\"Home\">\r\n          <header className=\"App-Header\">\r\n              <div class=\"text animate-bottom\">\r\n                <div class=\"r\">Hello,I'm...Tan! <br/>\r\n                  <span className=\"small-text\">\r\n                    I'm a Software Engineering. <br/>Get to know me!\r\n                  </span>\r\n                </div>\r\n                <div class=\"g\">Hello,I'm...Tan! <br/>\r\n                  <span className=\"small-text\">\r\n                    I'm a Software Engineering. <br/>Get to know me!            \r\n                  </span>\r\n                </div>\r\n                <div class=\"b\">Hello,I'm...Tan! <br/>\r\n                  <span className=\"small-text\">\r\n                    I'm a Software Engineering. <br/>Get to know me!             \r\n                  </span>\r\n                </div>\r\n              </div>\r\n          </header>\r\n        </div>\r\n        <p class=\"scroll-down animate-bottom\">\r\n          <a class=\"animate\" onClick={()=>this.props.handleClickScroll(\"About\")}></a>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Profile\r\n","import React, { Component } from 'react'\r\n\r\nexport class Parallax extends Component {\r\n  render() {\r\n    return (\r\n        <div className='parallax'>\r\n            <div id='stars1'></div>\r\n            <div id='stars2'></div>\r\n            <div id='stars3'></div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Parallax\r\n","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"App-Header\" id=\"About\">\r\n            About Me\r\n            \r\n        </div>\r\n        <a id=\"myBtn\" className=\"fas fa-chevron-circle-up\" onClick={()=>this.props.handleClickScroll(\"Home\")}></a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './styles/Portfolio.css';\nimport './styles/Parallax.scss';\nimport Profile from './components/Profile.js'\nimport Parallax from './components/Parallax.js'\nimport About from './components/About.js'\n\nclass App extends Component {\n  render() {\n    const handleClickScroll = (Scroll) => {\n      const element = document.getElementById(`${Scroll}`);\n          element.scrollIntoView({behavior: 'smooth'});\n    }\n    window.onscroll = function() {scrollFunction()};\n\n    const scrollFunction = () => {\n        if (document.body.scrollTop > 300 || document.documentElement.scrollTop > 300) {\n            document.getElementById(\"myBtn\").style.display = \"block\";\n        } else {\n            document.getElementById(\"myBtn\").style.display = \"none\";\n        }\n    }\n\n    const topFunction = () => {\n        document.body.scrollTop = 0;\n        document.documentElement.scrollTop = 0;\n    }\n\n    return (\n      <div className=\"Parallax-bg\">\n        <Parallax />\n        <Profile handleClickScroll={handleClickScroll}/>\n        <About scrollFunction={scrollFunction}  handleClickScroll={handleClickScroll}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma/css/bulma.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work off line and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}